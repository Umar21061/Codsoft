Question:
Sales prediction involves forecasting the amount of a product that
customers will purchase, taking into account various factors such as
advertising expenditure, target audience segmentation, and
advertising platform selection.
In businesses that offer products or services, the role of a Data
Scientist is crucial for predicting future sales. They utilize machine
learning techniques in Python to analyze and interpret data, allowing
them to make informed decisions regarding advertising costs. By
leveraging these predictions, businesses can optimize their
advertising strategies and maximize sales potential. Let'
s embark on
the journey of sales prediction using machine learning in Python.
Code Explanation 
Here's a explanation of code:

1. Import necessary libraries for data analysis and machine learning.
2. Load the advertising dataset into a Pandas DataFrame and display the first few rows.
3. Check for missing values in the dataset.
4. Identify the features (TV, Radio, Newspaper) and the target variable (Sales).
5. Split the dataset into training and testing sets.
6. Create a Linear Regression model.
7. Train the model using the training data.
8. Use the trained model to make predictions on the test data.
9. Evaluate the model's performance using Mean Squared Error and R-squared Score.
10. Print the evaluation metrics to assess the effectiveness of the sales prediction model.

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score


data = pd.read_csv("Desktop/advertising.csv")
print(data.head())


print(data.isnull().sum())

X = data[['TV', 'Radio', 'Newspaper']]
y = data['Sales']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = LinearRegression()
model.fit(X_train, y_train)


y_pred = model.predict(X_test)


mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error: {mse}')
print(f'R-squared Score: {r2}')
